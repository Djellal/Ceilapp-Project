@page "/course-types"

@attribute [Authorize]

<PageTitle>CourseTypes</PageTitle>
<RadzenStack>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenText Text="CourseTypes" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenButton Icon="add_circle_outline" Text="Add" Click="@AddButtonClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
      <RadzenColumn SizeMD=12>
        <RadzenDataGrid @ref="grid0" ColumnWidth="200px"   AllowFiltering="false" FilterMode="FilterMode.Advanced" AllowPaging="true" AllowSorting="false" ShowPagingSummary="true" PageSizeOptions=@(new int[]{5, 10, 20, 30})
            Data="@(courseTypes)" RowUpdate="@GridRowUpdate" RowCreate="@GridRowCreate" TItem="Ceilapp.Models.ceilapp.CourseType">
            <Columns>
                <RadzenDataGridColumn TItem="Ceilapp.Models.ceilapp.CourseType" Property="Name" Title="Name">
                  <EditTemplate Context="courseType">
                    <RadzenFormField Text="Name" Variant="Variant.Filled">
                     <ChildContent>
                      <RadzenTextBox style="display: block; width: 100%" @bind-Value="@(courseType.Name)" Name="Name" />
                     </ChildContent>
                     <Helper>
                      <RadzenRequiredValidator Component="Name" Text="Name is required"  />
                     </Helper>
                   </RadzenFormField>
                  </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Ceilapp.Models.ceilapp.CourseType" Property="NameAr" Title="Name Ar">
                  <EditTemplate Context="courseType">
                    <RadzenFormField Text="Name Ar" Variant="Variant.Filled">
                     <ChildContent>
                      <RadzenTextBox style="display: block; width: 100%" @bind-Value="@(courseType.NameAr)" Name="NameAr" />
                     </ChildContent>
                     <Helper>
                      <RadzenRequiredValidator Component="NameAr" Text="NameAr is required"  />
                     </Helper>
                   </RadzenFormField>
                  </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Ceilapp.Models.ceilapp.CourseType" Property="Description" Title="Description">
                  <EditTemplate Context="courseType">
                    <RadzenFormField Text="Description" Variant="Variant.Filled">
                     <ChildContent>
                      <RadzenTextBox style="display: block; width: 100%" @bind-Value="@(courseType.Description)" Name="Description" />
                    </ChildContent>
                   </RadzenFormField>
                  </EditTemplate>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="Ceilapp.Models.ceilapp.CourseType" Filterable="false" Sortable="false" Width="156px" TextAlign="TextAlign.Center">
                    <EditTemplate Context="courseType">
                        <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium"
                            style="margin-top: 0.25rem; margin-right: 0.25rem; margin-bottom: 0.25rem"
                            Click=@(args => SaveButtonClick(args, courseType)) @onclick:stopPropagation="true" />
                        <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium"
                            Click=@(args => CancelButtonClick(args, courseType)) @onclick:stopPropagation="true" />
                    </EditTemplate>
                    <Template Context="courseType">

                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium"
                            style="margin-top: 0.25rem; margin-right: 0.25rem; margin-bottom: 0.25rem"
                            Click=@(args => EditButtonClick(args, courseType)) @onclick:stopPropagation="true" />

                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Medium"
                            Shade="Shade.Lighter" Variant="Variant.Flat"
                            Click=@(args => GridDeleteButtonClick(args, courseType)) @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>

        </RadzenDataGrid>

    </RadzenColumn>
  </RadzenRow>
</RadzenStack>
